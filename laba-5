import math
import time
import matplotlib.pyplot as plt
n=-1
k=-1
timer=[]
timer_rec=[]
ans=1
"""шаг графика"""
step=-1

"""рекурсия"""
def rec_f(x):
    if x < 2:
        return 1
    else:
        return ((-1)**x)*(rec_f(x - 1)-rec_g(x-1)) //int(math.factorial(x+5))


"""итерация"""
def it_f(x):
    cata_f=[1]*3
    cata_g=[1]*3
    for i in range(2,x+1):

        cata_g[-1]=cata_f[0]+int((math.sin(cata_f[-1])))
        cata_f[-1]=((-1) ** x) * (cata_f[0] - cata_g[0]) //  int(math.factorial(x + 5))
        cata_f[0],cata_f[1]=cata_f[1],cata_f[2]
        cata_g[0], cata_g[1] = cata_g[1], cata_g[2]

    return cata_f[-1]



"""рекурсия"""
def rec_g(x):
    if x < 2:
        return 1
    else:
        return (rec_f(x-1)+int(math.sin(x)))

"""ввод числа n"""
while n < 1:
    print("Введите натуральное число от 1 ")
    n = int(input())
while step<1:
    step=int(input("Введите шаг графика от 1"))
graf = list(range(1, n + 1,step))


"""выбор режима работы программы 0-рекурсия 1-итерация 2-оба"""
while k != 0 and k != 1 and k != 2:
    print("Выберите режим работы 0-рекурсия 1-итерация 2-оба")
    k = int(input())

if (n >=  33 and (k == 0 or k == 2)) or (n >= 5000 and (k == 1 or k == 2)):
    print("работа программы может занять большое время ,вы хотите продолжить? \n 1=да 0=нет")
    ans = int(input())

    while ans != 1 and ans != 0:
        print("работа программы может занять большое время ,вы хотите продолжить? \n 1=да 0=нет")
        ans = int(input())


if k == 0 and ans == 1:
    for i in graf:
        start = time.time()
        res = rec_f(i)
        end = time.time()
        timer.append(end-start)
        rec_times = end - start
        print(i,"№Результат рекурсии ",res,"\nВремя выполнения",end-start,"\n\n")
    """графики"""
    plt.plot(graf, timer, label='рекурсионная функция.')
    plt.legend(loc=2)
    plt.xlabel('Значение n')
    plt.ylabel('Время выполнения (c)')
    plt.show()

if k == 1 and ans == 1:
    for i in graf:
        start = time.time()
        result = it_f(i)
        end = time.time()
        timer.append(end - start)
        iter_times = end - start
        print(i,"№Результат рекурсии ",result,"\nВремя выполнения",end-start,"\n\n")
    """графики"""
    plt.plot(graf, timer, label='Итерационная функция.')
    plt.legend(loc=2)
    plt.xlabel('Значение n')
    plt.ylabel('Время выполнения (c)')
    plt.show()
if k == 2 and ans == 1:
    for i in graf:
        start = time.time()
        result = it_f(i)
        end = time.time()
        timer.append(end-start)
        start_rec = time.time()
        res = rec_f(i)
        end_rec = time.time()
        timer_rec.append(end_rec-start_rec)
        rec_times = end_rec-start_rec
        iter_times = end-start
        print("\n",i,"№результат рекурсии ", res,"---------результат итерации",result,"-----------время  РЕКУРСИИ ",end_rec-start_rec,"-------время  ИТЕРАЦИИ",end-start)
    """графики"""
    plt.plot(graf, timer, label='Итерационная функция.')
    plt.plot(graf, timer_rec, label='Рекусионная функция.')
    plt.legend(loc=2)
    plt.xlabel('Значение n')
    plt.ylabel('Время выполнения (c)')
    plt.show()

